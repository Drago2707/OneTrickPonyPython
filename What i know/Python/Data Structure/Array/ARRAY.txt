Data structures are a way of organizing and storing data in a computer program so that it can be accessed and modified efficiently. Different data structures are suited for different types of problems and have different time and space complexities for the operations that can be performed on them.

ARRAY:

An array is a data structure that stores a fixed-size sequential collection of elements of the same type. Elements can be accessed by their index, which is a number that represents the position of the element in the array. The index is zero-based, meaning the first element has an index of 0, the second element has an index of 1, and so on.

An array can be implemented in many programming languages, including Python, Java, C, and C++. In Python, arrays can be created using the built-in "array" module, while in other languages, arrays are typically implemented as part of the language itself.

One of the main advantages of arrays is that they provide constant-time access to elements by their index, which makes them very efficient for certain types of operations, such as random access and traversal. The downside is that inserting or deleting elements from the middle of an array can be slow, as all elements after the inserted or deleted element need to be shifted.

Some of the common operations that can be performed on an array are:

Accessing an element by its index
Insertion: Adding a new element to the array
Deletion: Removing an element from the array
Traversal: Visiting each element in the array
Search: Finding an element with a specific value
Sorting: Arranging the elements in a specific order
Arrays are used in many algorithms and data structures like sorting, searching and many more. They are also used to implement other data structures like stack and queue.

import array
arr = array.array("i", [1, 2, 3, 4]) # i is the typecode for signed integers
print(arr) # array('i', [1, 2, 3, 4])
arr.append(5)
print(arr) # array('i', [1, 2, 3, 4, 5])

Like linked list, there could be other ways to improve the performance and functionality of array, but this should help you understand the concept of array.